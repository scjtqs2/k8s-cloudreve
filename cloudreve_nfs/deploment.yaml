## cloudreve 主体。这个服务里面包含了 cloudreve和aria2两个docker镜像
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cloudreve
  namespace: cloudreve
spec:
  replicas: 1
  selector:
    matchLabels:
      ## 这里填的值，需要和下面的 template.labels.app对应上
      app: cloudreve
  template:
    metadata:
      labels:
        ## 这里填写的值，需要和上面 以及 service服务里面的筛选器对应上
        app: cloudreve
    spec:
      volumes:
        - name: data
          # 直接将nfs挂载到容器。不经过pvc配置
          nfs:
            path: /volume4/cloudreve-data
            server: 192.168.50.112
        - name: conf-ini
          # 将 comfigMap配置以文件形式挂载到容器
          configMap:
            name: config
            items:
              - key: conf.ini
                path: conf.ini
        - name: downloads
          # 空目录，也就是临时挂载目录。pod停止后会自动删除
          emptyDir: { }
      containers:
        - name: cloudreve
          image: 'scjtqs/cloudreve:3.5.3'
          ports:
            - name: http
              containerPort: 5212
              protocol: TCP
          env:
            - name: TZ
              value: "Asia/Shanghai"
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 50m
              memory: 200Mi
          # 容器的实际挂载，name得对应上面volumes配置的name
          volumeMounts:
            - name: conf-ini
              mountPath: /cloudreve/conf.ini
              subPath: conf.ini
            - name: data
              mountPath: /cloudreve/uploads
              subPath: uploads
            - name: data
              mountPath: /cloudreve/avatar
              subPath: avatar
            - name: downloads
              mountPath: /downloads
        - name: aria2
          image: p3terx/aria2-pro
          # 环境变量。
          env:
            - name: TZ
              value: "Asia/Shanghai"
            - name: RPC_PORT
              value: "6800"
            - name: RPC_SECRET
              valueFrom:
                configMapKeyRef:
                  key: ariar_rpc_secret
                  name: config
            - name: IPV6_MODE
              value: "true"
            - name: UPDATE_TRACKERS
              value: "true"
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
          volumeMounts:
            - mountPath: /downloads
              name: downloads
            - name: data
              mountPath: /config
              subPath: aria2_config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  #    rollingUpdate:
  #      maxUnavailable: 0
  #      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

# redis服务
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cloudreve-redis
  namespace: cloudreve
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudreve-redis
  template:
    metadata:
      labels:
        app: cloudreve-redis
    spec:
      containers:
        - name: redis
          image: 'redis:6-alpine'
          ## 自定义命令 非必须，这里设置了redis的默认密码
          command:
            - "redis-server"
            - "--appendonly"
            - "yes"
            - "--requirepass"
            - "IamIsRed1ss"
          # 环境变量
          env:
            - name: TZ
              value: "Asia/Shanghai"       
          ## 定义端口名称 可以不定义，service里面直接填端口号就行
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst


